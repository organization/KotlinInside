buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.4.10'
        classpath group: 'com.jfrog.bintray.gradle', name: 'gradle-bintray-plugin', version: '1.8.5'
        classpath group: 'com.github.dcendents', name: 'android-maven-gradle-plugin', version: '2.1'
        classpath group: 'org.jetbrains.dokka', name: 'dokka-gradle-plugin', version: '1.4.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'

def libName = 'KotlinInside'
def libDevVersion = ''
def libVersion = "1.7.8$libDevVersion"
def libDesc = 'Unofficial DCInside API written in Kotlin'

group = 'be.zvz'
version = libVersion

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

dependencies {
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'

    //Jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.2'

    //FlexMark
    implementation group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.62.2'
    implementation group: 'com.vladsch.flexmark', name: 'flexmark-ext-gfm-strikethrough', version: '0.62.2'
    implementation group: 'com.vladsch.flexmark', name: 'flexmark-ext-tables', version: '0.62.2'
    implementation group: 'com.vladsch.flexmark', name: 'flexmark-ext-gfm-tasklist', version: '0.62.2'

    // Use the Kotlin JDK standard library.
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk7'
    // Use the Kotlin test library.
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test'
    // Use the Kotlin JUnit integration.
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit5'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.0'
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

dokkaJekyll {
    outputDirectory.set(file("docs"))

    dokkaSourceSets {
        configureEach {
            platform.set(org.jetbrains.dokka.Platform.jvm)

            jdkVersion.set(7)
            noStdlibLink.set(false)
            noJdkLink.set(false)

            sourceRoots.setFrom(file("src/main/kotlin"))
            sourceRoots.from(file("src/main/java"))
        }
    }
}

bintray {
    def localProps = new Properties()
    def propFile = project.file('local.properties')
    if (propFile.exists()) {
        localProps.load(propFile.newDataInputStream())

        user = localProps.getProperty('bintrayUser')
        key = localProps.getProperty('bintrayApiKey')

        configurations = ['archives']

        publish = true

        pkg {
            repo = group
            name = libName
            desc = libDesc
            licenses = ['GPL-3.0']

            vcsUrl = 'https://github.com/organization/KotlinInside'
            websiteUrl = 'https://organization.github.io/KotlinInside/'
            issueTrackerUrl = 'https://github.com/organization/KotlinInside/issues'

            labels = ['dcinside', 'dc-api']
            publicDownloadNumbers = true

            githubRepo = 'organization/KotlinInside'

            version {
                name = libVersion
                desc = 'Version ' + libVersion
                released  = new Date()
                vcsTag = libVersion
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            name libName
            description 'Unofficial DCInside API written in Kotlin'
            url 'https://github.com/organization/KotlinInside'
            inceptionYear '2019'
            packaging 'jar'
            groupId 'be.zvz'
            artifactId libName
            version libVersion
            licenses {
                license {
                    name 'GNU General Public License 3.0'
                    url 'https://www.gnu.org/licenses/gpl-3.0.html'
                    distribution 'repo'
                }
            }
        }
    }
}

// JCenter publish
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    from sourceSets.main.kotlin.srcDirs
    archiveClassifier = 'sources'
}
artifacts {
    archives sourcesJar
}